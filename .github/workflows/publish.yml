# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

#on:
#    release:
#        types: [created]

on:
    push:
        branches: [master]

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.x'

            - uses: actions/setup-node@v2
              with:
                  node-version: 18
                  registry-url: https://registry.npmjs.org/

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn install
              working-directory: assets

            - name: Build
              run: |
                  yarn build:css
                  yarn build:js
              working-directory: assets

            - name: Check built files
              run: ls -l ohmyadmin/statics/build/*

#            - name: Install dependencies
#              run: |
#                  python -m pip install --upgrade pip poetry
#                  poetry config virtualenvs.create false
#                  poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
#                  poetry install --no-interaction
#
#            - name: Build and publish
#              run: |
#                  poetry publish --build
